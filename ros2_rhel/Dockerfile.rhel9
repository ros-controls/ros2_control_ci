FROM almalinux:9
ARG ROS_DISTRO=rolling

# ROS prerequisites
# see https://docs.ros.org/en/rolling/Installation/RHEL-Install-RPMs.html
RUN dnf install -y langpacks-en glibc-langpack-en && \
  export LANG=en_US.UTF-8 && \
  dnf install -y 'dnf-command(config-manager)' epel-release && \
  dnf config-manager --set-enabled crb && \
  dnf clean all

# Setup Sources
RUN set -eux; \
  export ROS_APT_SOURCE_VERSION=$(curl -s https://api.github.com/repos/ros-infrastructure/ros-apt-source/releases/latest | grep -F "tag_name" | awk -F\" '{print $4}') && \
  if [ -z "$ROS_APT_SOURCE_VERSION" ]; then \
    echo "Failed to fetch ROS_APT_SOURCE_VERSION" >&2; \
    exit 1; \
  fi ; \
  ROS_RPM_URL="https://github.com/ros-infrastructure/ros-apt-source/releases/download/${ROS_APT_SOURCE_VERSION}/ros2-release-${ROS_APT_SOURCE_VERSION}-1.noarch.rpm" ; \
  echo "Installing ROS RPM: $ROS_RPM_URL" ; \
  dnf install -y "$ROS_RPM_URL"

# install ros
RUN dnf makecache -y
RUN dnf install -y \
  gcc-c++ \
  git \
  make \
  patch \
  python3-colcon-common-extensions \
  python3-mypy \
  python3-pip \
  python3-pydocstyle \
  python3-pytest \
  python3-pytest-repeat \
  python3-pytest-rerunfailures \
  python3-rosdep \
  python3-setuptools \
  python3-vcstool \
  wget \
  && dnf clean all

# install some pip packages needed for testing and
# not available as RPMs
# use the same versions as on Ubuntu Jammy
RUN python3 -m pip install --no-cache-dir -U --user \
  flake8==4.0.1 \
  pyflakes==2.4.0 \
  flake8-blind-except==0.1.1 \
  flake8-class-newline \
  flake8-deprecated \
  colcon-mixin

# install ros-base
ENV ROS_DISTRO=${ROS_DISTRO}
RUN dnf install -y ros-${ROS_DISTRO}-ros-base \
  && dnf clean all

# install cmake 3.22.1 (the same version as Ubuntu Jammy default). Needed for RSL
WORKDIR /usr
RUN \
  wget --progress=dot:giga https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.tar.gz && \
  tar --strip-components=1 -xzf cmake-3.22.1-linux-x86_64.tar.gz  && \
  rm cmake-3.22.1-linux-x86_64.tar.gz

# setup colcon mixin and metadata
RUN colcon mixin add default \
  https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
  colcon mixin update && \
  colcon metadata add default \
  https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
  colcon metadata update

# build generate_parameter_library and other deps from source
ENV ROS2_WS=/opt/ros2_ws
RUN mkdir -p $ROS2_WS/src
WORKDIR $ROS2_WS
COPY ros-controls.$ROS_DISTRO.repos .
RUN vcs import src < ros-controls.$ROS_DISTRO.repos && \
  . /opt/ros/$ROS_DISTRO/setup.sh && \
  rosdep init && \
  rosdep update --rosdistro $ROS_DISTRO && \
  rosdep install -iyr --from-path src && \
  colcon build \
  --mixin release build-testing-off \
  --cmake-args --no-warn-unused-cli && \
  rm -rf log src build

# add default.yaml to the image
COPY defaults.yaml /root/.colcon/defaults.yaml

# there is no python3-graphviz on rhel9, so install it via pip
RUN pip3 install --no-cache-dir graphviz

# set up sourcing of ros
COPY ./ros_entrypoint.sh /
ENTRYPOINT [ "/ros_entrypoint.sh" ]
CMD ["bash"]

# setup github labels
LABEL org.opencontainers.image.source=https://github.com/ros-controls/ros2_control_ci
LABEL org.opencontainers.image.description="RHEL 9 for ros-controls"
LABEL org.opencontainers.image.licenses=Apache-2.0
